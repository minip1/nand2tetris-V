advance: pos=0
advance: token typ=keyword, value= class 
advance: pos=1
advance: token typ=identifier, value= Main 
advance: pos=2
advance: token typ=symbol, value= { 
compile_class: entering classVarDec* loop, peek= function 
compile_class: entering subroutineDec* loop, peek= function 
advance: pos=3
advance: token typ=keyword, value= function 
advance: pos=0
advance: token typ=keyword, value= class 
advance: pos=1
advance: token typ=identifier, value= Main 
advance: pos=2
advance: token typ=symbol, value= { 
compile_class: entering classVarDec* loop, peek= function 
compile_class: entering subroutineDec* loop, peek= function 
advance: pos=3
advance: token typ=keyword, value= function 
advance: pos=0
advance: token typ=keyword, value= class 
advance: pos=1
advance: token typ=identifier, value= Main 
advance: pos=2
advance: token typ=symbol, value= { 
advance: pos=3
advance: token typ=keyword, value= function 
advance: pos=0
advance: token typ=keyword, value= class 
advance: pos=1
advance: token typ=identifier, value= Main 
advance: pos=2
advance: token typ=symbol, value= { 
advance: pos=3
advance: token typ=keyword, value= function 
advance: pos=0
advance: token typ=keyword, value= class 
advance: pos=1
advance: token typ=identifier, value= Main 
advance: pos=2
advance: token typ=symbol, value= { 
advance: pos=3
advance: token typ=keyword, value= function 
advance: pos=0
advance: token typ=keyword, value=class
advance: pos=1
advance: token typ=identifier, value=Main
advance: pos=2
advance: token typ=symbol, value={
advance: pos=3
advance: token typ=keyword, value=function
advance: pos=4
advance: token typ=keyword, value=void
advance: pos=5
advance: token typ=identifier, value=main
advance: pos=6
advance: token typ=symbol, value=(
compile_parameter_list: start, peek=)
advance: pos=7
advance: token typ=symbol, value=)
compile_subroutine_body: start, peek={
advance: pos=8
advance: token typ=symbol, value={
advance: pos=9
advance: token typ=keyword, value=var
advance: pos=10
advance: token typ=identifier, value=Array
advance: pos=11
advance: token typ=identifier, value=a
advance: pos=12
advance: token typ=symbol, value=;
advance: pos=13
advance: token typ=keyword, value=var
advance: pos=14
advance: token typ=keyword, value=int
advance: pos=15
advance: token typ=identifier, value=length
advance: pos=16
advance: token typ=symbol, value=;
advance: pos=17
advance: token typ=keyword, value=var
advance: pos=18
advance: token typ=keyword, value=int
advance: pos=19
advance: token typ=identifier, value=i
advance: pos=20
advance: token typ=symbol, value=,
advance: pos=21
advance: token typ=identifier, value=sum
advance: pos=22
advance: token typ=symbol, value=;
advance: pos=23
advance: token typ=keyword, value=let
advance: pos=24
advance: token typ=identifier, value=length
advance: pos=25
advance: token typ=symbol, value==
advance: pos=26
advance: token typ=identifier, value=Keyboard
advance: pos=27
advance: token typ=symbol, value=.
advance: pos=28
advance: token typ=identifier, value=readInt
advance: pos=29
advance: token typ=symbol, value=(
advance: pos=30
advance: token typ=stringConstant, value= HOW MANY NUMBERS?  
advance: pos=31
advance: token typ=symbol, value=)
advance: pos=32
advance: token typ=symbol, value=;
advance: pos=33
advance: token typ=keyword, value=let
advance: pos=34
advance: token typ=identifier, value=a
advance: pos=35
advance: token typ=symbol, value==
advance: pos=36
advance: token typ=identifier, value=Array
advance: pos=37
advance: token typ=symbol, value=.
advance: pos=38
advance: token typ=identifier, value=new
advance: pos=39
advance: token typ=symbol, value=(
advance: pos=40
advance: token typ=identifier, value=length
advance: pos=41
advance: token typ=symbol, value=)
advance: pos=42
advance: token typ=symbol, value=;
advance: pos=43
advance: token typ=keyword, value=let
advance: pos=44
advance: token typ=identifier, value=i
advance: pos=45
advance: token typ=symbol, value==
advance: pos=46
advance: token typ=integerConstant, value= 0 
advance: pos=47
advance: token typ=symbol, value=;
advance: pos=48
advance: token typ=keyword, value=while
advance: pos=49
advance: token typ=symbol, value=(
advance: pos=50
advance: token typ=identifier, value=i
advance: pos=51
advance: token typ=symbol, value=&lt;
advance: pos=52
advance: token typ=identifier, value=length
advance: pos=53
advance: token typ=symbol, value=)
advance: pos=54
advance: token typ=symbol, value={
advance: pos=55
advance: token typ=keyword, value=let
advance: pos=0
advance: token typ=keyword, value=class
advance: pos=1
advance: token typ=identifier, value=Main
advance: pos=2
advance: token typ=symbol, value={
advance: pos=3
advance: token typ=keyword, value=function
advance: pos=4
advance: token typ=keyword, value=void
advance: pos=5
advance: token typ=identifier, value=main
advance: pos=6
advance: token typ=symbol, value=(
advance: pos=7
advance: token typ=symbol, value=)
advance: pos=8
advance: token typ=symbol, value={
advance: pos=9
advance: token typ=keyword, value=var
advance: pos=10
advance: token typ=identifier, value=Array
advance: pos=11
advance: token typ=identifier, value=a
advance: pos=12
advance: token typ=symbol, value=;
advance: pos=13
advance: token typ=keyword, value=var
advance: pos=14
advance: token typ=keyword, value=int
advance: pos=15
advance: token typ=identifier, value=length
advance: pos=16
advance: token typ=symbol, value=;
advance: pos=17
advance: token typ=keyword, value=var
advance: pos=18
advance: token typ=keyword, value=int
advance: pos=19
advance: token typ=identifier, value=i
advance: pos=20
advance: token typ=symbol, value=,
advance: pos=21
advance: token typ=identifier, value=sum
advance: pos=22
advance: token typ=symbol, value=;
advance: pos=23
advance: token typ=keyword, value=let
advance: pos=24
advance: token typ=identifier, value=length
advance: pos=25
advance: token typ=symbol, value==
advance: pos=26
advance: token typ=identifier, value=Keyboard
advance: pos=27
advance: token typ=symbol, value=.
advance: pos=28
advance: token typ=identifier, value=readInt
advance: pos=29
advance: token typ=symbol, value=(
advance: pos=30
advance: token typ=stringConstant, value= HOW MANY NUMBERS?  
advance: pos=31
advance: token typ=symbol, value=)
advance: pos=32
advance: token typ=symbol, value=;
advance: pos=33
advance: token typ=keyword, value=let
advance: pos=34
advance: token typ=identifier, value=a
advance: pos=35
advance: token typ=symbol, value==
advance: pos=36
advance: token typ=identifier, value=Array
advance: pos=37
advance: token typ=symbol, value=.
advance: pos=38
advance: token typ=identifier, value=new
advance: pos=39
advance: token typ=symbol, value=(
advance: pos=40
advance: token typ=identifier, value=length
advance: pos=41
advance: token typ=symbol, value=)
advance: pos=42
advance: token typ=symbol, value=;
advance: pos=43
advance: token typ=keyword, value=let
advance: pos=44
advance: token typ=identifier, value=i
advance: pos=45
advance: token typ=symbol, value==
advance: pos=46
advance: token typ=integerConstant, value= 0 
advance: pos=47
advance: token typ=symbol, value=;
advance: pos=48
advance: token typ=keyword, value=while
advance: pos=49
advance: token typ=symbol, value=(
advance: pos=50
advance: token typ=identifier, value=i
advance: pos=51
advance: token typ=symbol, value=<
advance: pos=52
advance: token typ=identifier, value=length
advance: pos=53
advance: token typ=symbol, value=)
advance: pos=54
advance: token typ=symbol, value={
advance: pos=55
advance: token typ=keyword, value=let
advance: pos=56
advance: token typ=identifier, value=a
advance: pos=57
advance: token typ=symbol, value=[
advance: pos=58
advance: token typ=identifier, value=i
advance: pos=59
advance: token typ=symbol, value=]
advance: pos=60
advance: token typ=symbol, value==
advance: pos=61
advance: token typ=identifier, value=Keyboard
advance: pos=62
advance: token typ=symbol, value=.
advance: pos=63
advance: token typ=identifier, value=readInt
advance: pos=64
advance: token typ=symbol, value=(
advance: pos=65
advance: token typ=stringConstant, value= ENTER THE NEXT NUMBER:  
advance: pos=66
advance: token typ=symbol, value=)
advance: pos=67
advance: token typ=symbol, value=;
advance: pos=68
advance: token typ=keyword, value=let
advance: pos=69
advance: token typ=identifier, value=i
advance: pos=70
advance: token typ=symbol, value==
advance: pos=71
advance: token typ=identifier, value=i
advance: pos=72
advance: token typ=symbol, value=+
advance: pos=73
advance: token typ=integerConstant, value= 1 
advance: pos=74
advance: token typ=symbol, value=;
advance: pos=75
advance: token typ=symbol, value=}
advance: pos=76
advance: token typ=keyword, value=let
advance: pos=77
advance: token typ=identifier, value=i
advance: pos=78
advance: token typ=symbol, value==
advance: pos=79
advance: token typ=integerConstant, value= 0 
advance: pos=80
advance: token typ=symbol, value=;
advance: pos=81
advance: token typ=keyword, value=let
advance: pos=82
advance: token typ=identifier, value=sum
advance: pos=83
advance: token typ=symbol, value==
advance: pos=84
advance: token typ=integerConstant, value= 0 
advance: pos=85
advance: token typ=symbol, value=;
advance: pos=86
advance: token typ=keyword, value=while
advance: pos=87
advance: token typ=symbol, value=(
advance: pos=88
advance: token typ=identifier, value=i
advance: pos=89
advance: token typ=symbol, value=<
advance: pos=90
advance: token typ=identifier, value=length
advance: pos=91
advance: token typ=symbol, value=)
advance: pos=92
advance: token typ=symbol, value={
advance: pos=93
advance: token typ=keyword, value=let
advance: pos=94
advance: token typ=identifier, value=sum
advance: pos=95
advance: token typ=symbol, value==
advance: pos=96
advance: token typ=identifier, value=sum
advance: pos=97
advance: token typ=symbol, value=+
advance: pos=98
advance: token typ=identifier, value=a
advance: pos=99
advance: token typ=symbol, value=[
advance: pos=100
advance: token typ=identifier, value=i
advance: pos=101
advance: token typ=symbol, value=]
advance: pos=102
advance: token typ=symbol, value=;
advance: pos=103
advance: token typ=keyword, value=let
advance: pos=104
advance: token typ=identifier, value=i
advance: pos=105
advance: token typ=symbol, value==
advance: pos=106
advance: token typ=identifier, value=i
advance: pos=107
advance: token typ=symbol, value=+
advance: pos=108
advance: token typ=integerConstant, value= 1 
advance: pos=109
advance: token typ=symbol, value=;
advance: pos=110
advance: token typ=symbol, value=}
advance: pos=111
advance: token typ=keyword, value=do
advance: pos=112
advance: token typ=identifier, value=Output
advance: pos=113
advance: token typ=symbol, value=.
advance: pos=114
advance: token typ=identifier, value=printString
advance: pos=115
advance: token typ=symbol, value=(
advance: pos=116
advance: token typ=stringConstant, value= THE AVERAGE IS:  
advance: pos=117
advance: token typ=symbol, value=)
advance: pos=118
advance: token typ=symbol, value=;
advance: pos=119
advance: token typ=keyword, value=do
advance: pos=120
advance: token typ=identifier, value=Output
advance: pos=121
advance: token typ=symbol, value=.
advance: pos=122
advance: token typ=identifier, value=printInt
advance: pos=123
advance: token typ=symbol, value=(
advance: pos=124
advance: token typ=identifier, value=sum
advance: pos=125
advance: token typ=symbol, value=/
advance: pos=126
advance: token typ=identifier, value=length
advance: pos=127
advance: token typ=symbol, value=)
advance: pos=128
advance: token typ=symbol, value=;
advance: pos=129
advance: token typ=keyword, value=do
advance: pos=130
advance: token typ=identifier, value=Output
advance: pos=131
advance: token typ=symbol, value=.
advance: pos=132
advance: token typ=identifier, value=println
advance: pos=133
advance: token typ=symbol, value=(
advance: pos=134
advance: token typ=symbol, value=)
advance: pos=135
advance: token typ=symbol, value=;
advance: pos=136
advance: token typ=keyword, value=return
advance: pos=137
advance: token typ=symbol, value=;
advance: pos=138
advance: token typ=symbol, value=}
advance: pos=139
advance: token typ=symbol, value=}
advance: pos=0
advance: token typ=keyword, value=class
advance: pos=1
advance: token typ=identifier, value=Main
advance: pos=2
advance: token typ=symbol, value={
advance: pos=3
advance: token typ=keyword, value=function
advance: pos=4
advance: token typ=keyword, value=void
advance: pos=5
advance: token typ=identifier, value=main
advance: pos=6
advance: token typ=symbol, value=(
advance: pos=7
advance: token typ=symbol, value=)
advance: pos=8
advance: token typ=symbol, value={
advance: pos=9
advance: token typ=keyword, value=var
advance: pos=10
advance: token typ=identifier, value=Array
advance: pos=11
advance: token typ=identifier, value=a
advance: pos=12
advance: token typ=symbol, value=;
advance: pos=13
advance: token typ=keyword, value=var
advance: pos=14
advance: token typ=keyword, value=int
advance: pos=15
advance: token typ=identifier, value=length
advance: pos=16
advance: token typ=symbol, value=;
advance: pos=17
advance: token typ=keyword, value=var
advance: pos=18
advance: token typ=keyword, value=int
advance: pos=19
advance: token typ=identifier, value=i
advance: pos=20
advance: token typ=symbol, value=,
advance: pos=21
advance: token typ=identifier, value=sum
advance: pos=22
advance: token typ=symbol, value=;
advance: pos=23
advance: token typ=keyword, value=let
advance: pos=24
advance: token typ=identifier, value=length
advance: pos=25
advance: token typ=symbol, value==
advance: pos=26
advance: token typ=identifier, value=Keyboard
advance: pos=27
advance: token typ=symbol, value=.
advance: pos=28
advance: token typ=identifier, value=readInt
advance: pos=29
advance: token typ=symbol, value=(
advance: pos=30
advance: token typ=stringConstant, value= HOW MANY NUMBERS?  
advance: pos=31
advance: token typ=symbol, value=)
advance: pos=32
advance: token typ=symbol, value=;
advance: pos=33
advance: token typ=keyword, value=let
advance: pos=34
advance: token typ=identifier, value=a
advance: pos=35
advance: token typ=symbol, value==
advance: pos=36
advance: token typ=identifier, value=Array
advance: pos=37
advance: token typ=symbol, value=.
advance: pos=38
advance: token typ=identifier, value=new
advance: pos=39
advance: token typ=symbol, value=(
advance: pos=40
advance: token typ=identifier, value=length
advance: pos=41
advance: token typ=symbol, value=)
advance: pos=42
advance: token typ=symbol, value=;
advance: pos=43
advance: token typ=keyword, value=let
advance: pos=44
advance: token typ=identifier, value=i
advance: pos=45
advance: token typ=symbol, value==
advance: pos=46
advance: token typ=integerConstant, value= 0 
advance: pos=47
advance: token typ=symbol, value=;
advance: pos=48
advance: token typ=keyword, value=while
advance: pos=49
advance: token typ=symbol, value=(
advance: pos=50
advance: token typ=identifier, value=i
advance: pos=51
advance: token typ=symbol, value=<
advance: pos=52
advance: token typ=identifier, value=length
advance: pos=53
advance: token typ=symbol, value=)
advance: pos=54
advance: token typ=symbol, value={
advance: pos=55
advance: token typ=keyword, value=let
advance: pos=56
advance: token typ=identifier, value=a
advance: pos=57
advance: token typ=symbol, value=[
advance: pos=58
advance: token typ=identifier, value=i
advance: pos=59
advance: token typ=symbol, value=]
advance: pos=60
advance: token typ=symbol, value==
advance: pos=61
advance: token typ=identifier, value=Keyboard
advance: pos=62
advance: token typ=symbol, value=.
advance: pos=63
advance: token typ=identifier, value=readInt
advance: pos=64
advance: token typ=symbol, value=(
advance: pos=65
advance: token typ=stringConstant, value= ENTER THE NEXT NUMBER:  
advance: pos=66
advance: token typ=symbol, value=)
advance: pos=67
advance: token typ=symbol, value=;
advance: pos=68
advance: token typ=keyword, value=let
advance: pos=69
advance: token typ=identifier, value=i
advance: pos=70
advance: token typ=symbol, value==
advance: pos=71
advance: token typ=identifier, value=i
advance: pos=72
advance: token typ=symbol, value=+
advance: pos=73
advance: token typ=integerConstant, value= 1 
advance: pos=74
advance: token typ=symbol, value=;
advance: pos=75
advance: token typ=symbol, value=}
advance: pos=76
advance: token typ=keyword, value=let
advance: pos=77
advance: token typ=identifier, value=i
advance: pos=78
advance: token typ=symbol, value==
advance: pos=79
advance: token typ=integerConstant, value= 0 
advance: pos=80
advance: token typ=symbol, value=;
advance: pos=81
advance: token typ=keyword, value=let
advance: pos=82
advance: token typ=identifier, value=sum
advance: pos=83
advance: token typ=symbol, value==
advance: pos=84
advance: token typ=integerConstant, value= 0 
advance: pos=85
advance: token typ=symbol, value=;
advance: pos=86
advance: token typ=keyword, value=while
advance: pos=87
advance: token typ=symbol, value=(
advance: pos=88
advance: token typ=identifier, value=i
advance: pos=89
advance: token typ=symbol, value=<
advance: pos=90
advance: token typ=identifier, value=length
advance: pos=91
advance: token typ=symbol, value=)
advance: pos=92
advance: token typ=symbol, value={
advance: pos=93
advance: token typ=keyword, value=let
advance: pos=94
advance: token typ=identifier, value=sum
advance: pos=95
advance: token typ=symbol, value==
advance: pos=96
advance: token typ=identifier, value=sum
advance: pos=97
advance: token typ=symbol, value=+
advance: pos=98
advance: token typ=identifier, value=a
advance: pos=99
advance: token typ=symbol, value=[
advance: pos=100
advance: token typ=identifier, value=i
advance: pos=101
advance: token typ=symbol, value=]
advance: pos=102
advance: token typ=symbol, value=;
advance: pos=103
advance: token typ=keyword, value=let
advance: pos=104
advance: token typ=identifier, value=i
advance: pos=105
advance: token typ=symbol, value==
advance: pos=106
advance: token typ=identifier, value=i
advance: pos=107
advance: token typ=symbol, value=+
advance: pos=108
advance: token typ=integerConstant, value= 1 
advance: pos=109
advance: token typ=symbol, value=;
advance: pos=110
advance: token typ=symbol, value=}
advance: pos=111
advance: token typ=keyword, value=do
advance: pos=112
advance: token typ=identifier, value=Output
advance: pos=113
advance: token typ=symbol, value=.
advance: pos=114
advance: token typ=identifier, value=printString
advance: pos=115
advance: token typ=symbol, value=(
advance: pos=116
advance: token typ=stringConstant, value= THE AVERAGE IS:  
advance: pos=117
advance: token typ=symbol, value=)
advance: pos=118
advance: token typ=symbol, value=;
advance: pos=119
advance: token typ=keyword, value=do
advance: pos=120
advance: token typ=identifier, value=Output
advance: pos=121
advance: token typ=symbol, value=.
advance: pos=122
advance: token typ=identifier, value=printInt
advance: pos=123
advance: token typ=symbol, value=(
advance: pos=124
advance: token typ=identifier, value=sum
advance: pos=125
advance: token typ=symbol, value=/
advance: pos=126
advance: token typ=identifier, value=length
advance: pos=127
advance: token typ=symbol, value=)
advance: pos=128
advance: token typ=symbol, value=;
advance: pos=129
advance: token typ=keyword, value=do
advance: pos=130
advance: token typ=identifier, value=Output
advance: pos=131
advance: token typ=symbol, value=.
advance: pos=132
advance: token typ=identifier, value=println
advance: pos=133
advance: token typ=symbol, value=(
advance: pos=134
advance: token typ=symbol, value=)
advance: pos=135
advance: token typ=symbol, value=;
advance: pos=136
advance: token typ=keyword, value=return
advance: pos=137
advance: token typ=symbol, value=;
advance: pos=138
advance: token typ=symbol, value=}
advance: pos=139
advance: token typ=symbol, value=}
advance: pos=0
advance: token typ=keyword, value=class
advance: pos=1
advance: token typ=identifier, value=Main
advance: pos=2
advance: token typ=symbol, value={
advance: pos=3
advance: token typ=keyword, value=function
advance: pos=4
advance: token typ=keyword, value=void
advance: pos=5
advance: token typ=identifier, value=main
advance: pos=6
advance: token typ=symbol, value=(
compile_parameter_list: start, peek=)
advance: pos=7
advance: token typ=symbol, value=)
compile_subroutine_body: start, peek={
advance: pos=8
advance: token typ=symbol, value={
advance: pos=9
advance: token typ=keyword, value=var
advance: pos=10
advance: token typ=identifier, value=Array
advance: pos=11
advance: token typ=identifier, value=a
advance: pos=12
advance: token typ=symbol, value=;
advance: pos=13
advance: token typ=keyword, value=var
advance: pos=14
advance: token typ=keyword, value=int
advance: pos=15
advance: token typ=identifier, value=length
advance: pos=16
advance: token typ=symbol, value=;
advance: pos=17
advance: token typ=keyword, value=var
advance: pos=18
advance: token typ=keyword, value=int
advance: pos=19
advance: token typ=identifier, value=i
advance: pos=20
advance: token typ=symbol, value=,
advance: pos=21
advance: token typ=identifier, value=sum
advance: pos=22
advance: token typ=symbol, value=;
advance: pos=23
advance: token typ=keyword, value=let
advance: pos=24
advance: token typ=identifier, value=length
advance: pos=25
advance: token typ=symbol, value==
advance: pos=26
advance: token typ=identifier, value=Keyboard
advance: pos=27
advance: token typ=symbol, value=.
advance: pos=28
advance: token typ=identifier, value=readInt
advance: pos=29
advance: token typ=symbol, value=(
advance: pos=30
advance: token typ=stringConstant, value= HOW MANY NUMBERS?  
advance: pos=31
advance: token typ=symbol, value=)
advance: pos=32
advance: token typ=symbol, value=;
advance: pos=33
advance: token typ=keyword, value=let
advance: pos=34
advance: token typ=identifier, value=a
advance: pos=35
advance: token typ=symbol, value==
advance: pos=36
advance: token typ=identifier, value=Array
advance: pos=37
advance: token typ=symbol, value=.
advance: pos=38
advance: token typ=identifier, value=new
advance: pos=39
advance: token typ=symbol, value=(
advance: pos=40
advance: token typ=identifier, value=length
advance: pos=41
advance: token typ=symbol, value=)
advance: pos=42
advance: token typ=symbol, value=;
advance: pos=43
advance: token typ=keyword, value=let
advance: pos=44
advance: token typ=identifier, value=i
advance: pos=45
advance: token typ=symbol, value==
advance: pos=46
advance: token typ=integerConstant, value= 0 
advance: pos=47
advance: token typ=symbol, value=;
advance: pos=48
advance: token typ=keyword, value=while
advance: pos=49
advance: token typ=symbol, value=(
advance: pos=50
advance: token typ=identifier, value=i
advance: pos=51
advance: token typ=symbol, value=&lt;
advance: pos=52
advance: token typ=identifier, value=length
advance: pos=53
advance: token typ=symbol, value=)
advance: pos=54
advance: token typ=symbol, value={
advance: pos=55
advance: token typ=keyword, value=let
advance: pos=0
advance: token typ=keyword, value=class
advance: pos=1
advance: token typ=identifier, value=Main
advance: pos=2
advance: token typ=symbol, value={
advance: pos=3
advance: token typ=keyword, value=function
advance: pos=4
advance: token typ=keyword, value=void
advance: pos=5
advance: token typ=identifier, value=main
advance: pos=6
advance: token typ=symbol, value=(
advance: pos=7
advance: token typ=symbol, value=)
advance: pos=8
advance: token typ=symbol, value={
advance: pos=9
advance: token typ=keyword, value=var
advance: pos=10
advance: token typ=identifier, value=Array
advance: pos=11
advance: token typ=identifier, value=a
advance: pos=12
advance: token typ=symbol, value=;
advance: pos=13
advance: token typ=keyword, value=var
advance: pos=14
advance: token typ=keyword, value=int
advance: pos=15
advance: token typ=identifier, value=length
advance: pos=16
advance: token typ=symbol, value=;
advance: pos=17
advance: token typ=keyword, value=var
advance: pos=18
advance: token typ=keyword, value=int
advance: pos=19
advance: token typ=identifier, value=i
advance: pos=20
advance: token typ=symbol, value=,
advance: pos=21
advance: token typ=identifier, value=sum
advance: pos=22
advance: token typ=symbol, value=;
advance: pos=23
advance: token typ=keyword, value=let
advance: pos=24
advance: token typ=identifier, value=length
advance: pos=25
advance: token typ=symbol, value==
advance: pos=26
advance: token typ=identifier, value=Keyboard
advance: pos=27
advance: token typ=symbol, value=.
advance: pos=28
advance: token typ=identifier, value=readInt
advance: pos=29
advance: token typ=symbol, value=(
advance: pos=30
advance: token typ=stringConstant, value= HOW MANY NUMBERS?  
advance: pos=31
advance: token typ=symbol, value=)
advance: pos=32
advance: token typ=symbol, value=;
advance: pos=33
advance: token typ=keyword, value=let
advance: pos=34
advance: token typ=identifier, value=a
advance: pos=35
advance: token typ=symbol, value==
advance: pos=36
advance: token typ=identifier, value=Array
advance: pos=37
advance: token typ=symbol, value=.
advance: pos=38
advance: token typ=identifier, value=new
advance: pos=39
advance: token typ=symbol, value=(
advance: pos=40
advance: token typ=identifier, value=length
advance: pos=41
advance: token typ=symbol, value=)
advance: pos=42
advance: token typ=symbol, value=;
advance: pos=43
advance: token typ=keyword, value=let
advance: pos=44
advance: token typ=identifier, value=i
advance: pos=45
advance: token typ=symbol, value==
advance: pos=46
advance: token typ=integerConstant, value= 0 
advance: pos=47
advance: token typ=symbol, value=;
advance: pos=48
advance: token typ=keyword, value=while
advance: pos=49
advance: token typ=symbol, value=(
advance: pos=50
advance: token typ=identifier, value=i
advance: pos=51
advance: token typ=symbol, value=<
advance: pos=52
advance: token typ=identifier, value=length
advance: pos=53
advance: token typ=symbol, value=)
advance: pos=54
advance: token typ=symbol, value={
advance: pos=55
advance: token typ=keyword, value=let
advance: pos=56
advance: token typ=identifier, value=a
advance: pos=57
advance: token typ=symbol, value=[
advance: pos=58
advance: token typ=identifier, value=i
advance: pos=59
advance: token typ=symbol, value=]
advance: pos=60
advance: token typ=symbol, value==
advance: pos=61
advance: token typ=identifier, value=Keyboard
advance: pos=62
advance: token typ=symbol, value=.
advance: pos=63
advance: token typ=identifier, value=readInt
advance: pos=64
advance: token typ=symbol, value=(
advance: pos=65
advance: token typ=stringConstant, value= ENTER THE NEXT NUMBER:  
advance: pos=66
advance: token typ=symbol, value=)
advance: pos=67
advance: token typ=symbol, value=;
advance: pos=68
advance: token typ=keyword, value=let
advance: pos=69
advance: token typ=identifier, value=i
advance: pos=70
advance: token typ=symbol, value==
advance: pos=71
advance: token typ=identifier, value=i
advance: pos=72
advance: token typ=symbol, value=+
advance: pos=73
advance: token typ=integerConstant, value= 1 
advance: pos=74
advance: token typ=symbol, value=;
advance: pos=75
advance: token typ=symbol, value=}
advance: pos=76
advance: token typ=keyword, value=let
advance: pos=77
advance: token typ=identifier, value=i
advance: pos=78
advance: token typ=symbol, value==
advance: pos=79
advance: token typ=integerConstant, value= 0 
advance: pos=80
advance: token typ=symbol, value=;
advance: pos=81
advance: token typ=keyword, value=let
advance: pos=82
advance: token typ=identifier, value=sum
advance: pos=83
advance: token typ=symbol, value==
advance: pos=84
advance: token typ=integerConstant, value= 0 
advance: pos=85
advance: token typ=symbol, value=;
advance: pos=86
advance: token typ=keyword, value=while
advance: pos=87
advance: token typ=symbol, value=(
advance: pos=88
advance: token typ=identifier, value=i
advance: pos=89
advance: token typ=symbol, value=<
advance: pos=90
advance: token typ=identifier, value=length
advance: pos=91
advance: token typ=symbol, value=)
advance: pos=92
advance: token typ=symbol, value={
advance: pos=93
advance: token typ=keyword, value=let
advance: pos=94
advance: token typ=identifier, value=sum
advance: pos=95
advance: token typ=symbol, value==
advance: pos=96
advance: token typ=identifier, value=sum
advance: pos=97
advance: token typ=symbol, value=+
advance: pos=98
advance: token typ=identifier, value=a
advance: pos=99
advance: token typ=symbol, value=[
advance: pos=100
advance: token typ=identifier, value=i
advance: pos=101
advance: token typ=symbol, value=]
advance: pos=102
advance: token typ=symbol, value=;
advance: pos=103
advance: token typ=keyword, value=let
advance: pos=104
advance: token typ=identifier, value=i
advance: pos=105
advance: token typ=symbol, value==
advance: pos=106
advance: token typ=identifier, value=i
advance: pos=107
advance: token typ=symbol, value=+
advance: pos=108
advance: token typ=integerConstant, value= 1 
advance: pos=109
advance: token typ=symbol, value=;
advance: pos=110
advance: token typ=symbol, value=}
advance: pos=111
advance: token typ=keyword, value=do
advance: pos=112
advance: token typ=identifier, value=Output
advance: pos=113
advance: token typ=symbol, value=.
advance: pos=114
advance: token typ=identifier, value=printString
advance: pos=115
advance: token typ=symbol, value=(
advance: pos=116
advance: token typ=stringConstant, value= THE AVERAGE IS:  
advance: pos=117
advance: token typ=symbol, value=)
advance: pos=118
advance: token typ=symbol, value=;
advance: pos=119
advance: token typ=keyword, value=do
advance: pos=120
advance: token typ=identifier, value=Output
advance: pos=121
advance: token typ=symbol, value=.
advance: pos=122
advance: token typ=identifier, value=printInt
advance: pos=123
advance: token typ=symbol, value=(
advance: pos=124
advance: token typ=identifier, value=sum
advance: pos=125
advance: token typ=symbol, value=/
advance: pos=126
advance: token typ=identifier, value=length
advance: pos=127
advance: token typ=symbol, value=)
advance: pos=128
advance: token typ=symbol, value=;
advance: pos=129
advance: token typ=keyword, value=do
advance: pos=130
advance: token typ=identifier, value=Output
advance: pos=131
advance: token typ=symbol, value=.
advance: pos=132
advance: token typ=identifier, value=println
advance: pos=133
advance: token typ=symbol, value=(
advance: pos=134
advance: token typ=symbol, value=)
advance: pos=135
advance: token typ=symbol, value=;
advance: pos=136
advance: token typ=keyword, value=return
advance: pos=137
advance: token typ=symbol, value=;
advance: pos=138
advance: token typ=symbol, value=}
advance: pos=139
advance: token typ=symbol, value=}
